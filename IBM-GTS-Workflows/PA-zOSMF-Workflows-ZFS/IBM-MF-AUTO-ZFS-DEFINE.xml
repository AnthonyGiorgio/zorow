<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<workflow>
    <autoTakeOwnership>true</autoTakeOwnership>
    <workflowSettingInfo>
        <variablesSetting isInstanceVariableWithoutPrefix="true"></variablesSetting>
    </workflowSettingInfo>
    <workflowInfo>
        <workflowID scope="system">IBM-MF-AUTO-ZFS-DEFINE</workflowID>
        <workflowDescription>IBM-MF-AUTO-ZFS-DEFINE</workflowDescription>
        <workflowVersion>1.1</workflowVersion>
        <vendor>IBM-MF-AUTO</vendor>
        <General/>
    </workflowInfo>
    <variable name="zfs-dsn" scope="instance" visibility="public">
        <label>Please enter the Dataset Name for the new ZFS</label>
        <abstract>This will be used as input for a new ZFS dataset</abstract>
        <description>This will be used as input for a new ZFS dataset</description>
        <category>General</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>DSNAME</validationType>
            <default>USERID.TEST.ZFS</default>
        </string>
    </variable>
    <variable name="zfs-sms-dc" scope="instance" visibility="public">
        <label>Data Class</label>
        <abstract>The target SMS Dataclass</abstract>
        <description>A data class is a collection of allocation and space attributes that the system uses when creating a data set. If SMS is active, a data class can be assigned to any data set. For non-SMS-managed DASD data sets, the system uses the allocation attribute values of the data class, but it does not save the data class name. If you alter a data class definition, SMS applies the changes to all new data sets and certain existing data sets that use the data class.</description>
        <category>SMS</category>
        <string valueMustBeChoice="false" multiLine="false">
            <minLength>1</minLength>
            <maxLength>8</maxLength>
        </string>
    </variable>
    <variable name="zfs-sms-mc" scope="instance" visibility="public">
        <label>Management Class</label>
        <abstract>Target SMS Management class</abstract>
        <description>A management class is a collection of management attributes that the storage administrator defines. For data sets, these attributes control retention, migration, backup, and release of allocated but unused space. For OAM objects, the attributes control retention, backup, and class transition. You can also use management classes to define how your aggregate groups should be managed. DFSMShsm acts on many management class attributes.</description>
        <category>SMS</category>
        <string valueMustBeChoice="false" multiLine="false">
            <minLength>1</minLength>
            <maxLength>8</maxLength>
        </string>
    </variable>
    <variable name="zfs-sms-sc" scope="instance" visibility="public">
        <label>Storage Class</label>
        <abstract>Target SMS Storage Class</abstract>
        <description>A storage class is a collection of performance goals and device availability requirements that the storage administrator defines. Storage class is a required part of an SMS-managed environment. A storage class provides the criteria that SMS uses in determining an appropriate location to place a data set or object. SMS uses the storage class to select a device according to the following criteria: device performance, the amount of space available on the volume, and how available a data set or object can be on that device.</description>
        <category>SMS</category>
        <string valueMustBeChoice="false" multiLine="false">
            <minLength>1</minLength>
            <maxLength>8</maxLength>
        </string>
    </variable>
    <variable name="zfs-pri" scope="instance" visibility="private">
        <label>Primary Allocation</label>
        <abstract>Primary Allocation</abstract>
        <description>Primary Allocation</description>
        <category>General</category>
        <integer>
            <minValue>1</minValue>
        </integer>
    </variable>
    <variable name="zfs-sec" scope="instance" visibility="private">
        <label>Secondary Allocation</label>
        <abstract>Secondary Allocation</abstract>
        <description>Secondary Allocation</description>
        <category>General</category>
        <integer/>
    </variable>
    <variable name="zfs-alc-unit" scope="instance" visibility="public">
        <label>Allocation Unit</label>
        <abstract>Allocation Unit</abstract>
        <description>Allocation Unit</description>
        <category>General</category>
        <string valueMustBeChoice="true" multiLine="false">
            <minLength>1</minLength>
            <maxLength>20</maxLength>
            <choice>CYL</choice>
            <choice>MB</choice>
            <choice>TRK</choice>
            <default>MB</default>
        </string>
    </variable>
    <variable name="zfs-vol" scope="instance" visibility="private">
        <label>Volume</label>
        <abstract>The volser for the disk</abstract>
        <description>The volume serial for the target disk</description>
        <category>General</category>
        <string valueMustBeChoice="false" multiLine="false">
            <validationType>VOLSER</validationType>
        </string>
    </variable>
    <atCreate name="zfs-sec" scope="instance" required="true" prompt="true"/>
    <atCreate name="zfs-alc-unit" scope="instance" required="true" prompt="true"/>
    <atCreate name="zfs-pri" scope="instance" required="true" prompt="true"/>
    <atCreate name="zfs-dsn" scope="instance" required="true" prompt="true"/>
    <atCreate name="zfs-vol" scope="instance" required="false" prompt="true"/>
    <atCreate name="zfs-sms-sc" scope="instance" required="false" prompt="true"/>
    <atCreate name="zfs-sms-mc" scope="instance" required="false" prompt="true"/>
    <atCreate name="zfs-sms-dc" scope="instance" required="false" prompt="true"/>
    <step name="Define-ZFS" optional="false">
        <title>Define New ZFS</title>
        <description>&lt;h3&gt;Define a new ZFS Filesystem&lt;/h3&gt;
&lt;h6&gt;This step uses the IDCAMS Access Method Services APIs to define the new ZFS&lt;/h6&gt;
&lt;br&gt;&lt;br&gt;
If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo @LinkedIn&lt;/a&gt;</description>
        <variableValue name="zfs-dsn" scope="instance" noPromptIfSet="true" required="true"/>
        <variableValue name="zfs-sms-dc" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="zfs-sms-mc" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="zfs-sms-sc" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="zfs-alc-unit" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="zfs-pri" scope="instance" noPromptIfSet="false" required="true"/>
        <variableValue name="zfs-sec" scope="instance" noPromptIfSet="false" required="false"/>
        <variableValue name="zfs-vol" scope="instance" noPromptIfSet="false" required="false"/>
        <instructions substitution="false">&lt;h3&gt;Please follow through the wizard to create a new ZFS dataset&lt;/h3&gt;&lt;br&gt;&lt;br&gt;
If you have any questions please reach out to Eduardo Rocha:&lt;br&gt;
&lt;a href="mailto:eduardor@br.ibm.com"&gt;Eduardo Rocha @IBM&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/ehrocha/"&gt;Eduardo @LinkedIn&lt;/a&gt;</instructions>
        <weight>1</weight>
        <autoEnable>false</autoEnable>
        <canMarkAsFailed>false</canMarkAsFailed>
        <template>
            <inlineTemplate substitution="true">//DEFINE  EXEC PGM=IDCAMS                                    
//SYSPRINT DD SYSOUT=*                                       
//SYSUDUMP DD SYSOUT=*                                       
//AMSDUMP DD SYSOUT=*                                        
//SYSIN DD *                                                 
  DEFINE CLUSTER (NAME($zfs-dsn)  -        
  LINEAR $zfs-alc-unit($zfs-pri $zfs-sec) -
#if($zfs-sms-dc != "")  DATACLAS($zfs-sms-dc) -
#end
#if($zfs-sms-sc != "")  STORCLAS($zfs-sms-sc) -
#end
#if($zfs-sms-mc != "")  MGMTCLAS($zfs-sms-mc) -
#end
#if($zfs-vol != "")  VOLUMES($zfs-vol) -
#end
  SHAREOPTIONS(2))
/*                                                           
//FORMAT  EXEC PGM=IOEAGFMT,                                 
// PARM=('-aggregate $zfs-dsn -compat')   
//SYSPRINT DD SYSOUT=*                                       
/*           </inlineTemplate>
            <submitAs maxRc="0">JCL</submitAs>
            <maxLrecl>80</maxLrecl>
        </template>
    </step>
</workflow>
