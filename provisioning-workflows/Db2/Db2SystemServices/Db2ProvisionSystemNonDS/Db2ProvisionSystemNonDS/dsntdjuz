//*********************************************************************
//* JOB NAME = DSNTDJUZ
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    LICENSED MATERIALS - PROPERTY OF IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2018 IBM CORP.  ALL RIGHTS RESERVED.
//*
//*    STATUS = VERSION 12
//*
//* FUNCTION = THIS JOB IS EXECUTED DURING DEPROVISION ACTION AND
//*            PERFORMS THE FOLLOWING:
//*
//*            DELETE ZPARM MODULE OF THE DB2 SYSTEM BEING
//*            DEPROVISIONED.
//*
//* THIS JOB DELETES ALL NON-VSAM DATA SETS HAVING A SPECIFIED PREFIX.
//*
//* PSEUDOCODE:
//* -----------
//* DSNTGEN: GENERATE A CLIST THAT DELETES A MEMBER FROM A PDS EVEN
//*          IF THE PDS IS ALLOCATED BY OTHER TASKS.  THE PDS CAN
//*          BE A BASE DATA SET OR AN ALIAS OF ONE.
//* DSNTIAS: RUN THE GENERATED CLIST TO DELETE PDS MEMBERS.  THE
//*          FORMAT IS:
//*             %DSNTICDM PDSNAME(MEMNAME)
//*
//*
//*********************************************************************
//* DSNTGEN: GENERATE A CLIST THAT DELETES A MEMBER FROM A PDS EVEN
//*          IF THE PDS IS ALLOCATED BY OTHER TASKS.  THE PDS CAN
//*          BE A BASE DATA SET OR AN ALIAS OF ONE.
//*********************************************************************
//* CHANGE ACTIVITY =
//*   11/14/2018 INTRODUCTION                                   E75766
//*********************************************************************
//DSNTGEN EXEC PGM=IEBGENER,COND=(4,LT)
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  DSN=&&TEMPPDS(DSNTICDM),
//             DISP=(,PASS),
//             UNIT=SYSDA,SPACE=(TRK,(1,1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80)
//SYSUT1   DD DATA,DLM='\\'
PROC 1 PDSMEM

  SET &MAXRC = 0
  SET &B = &STR(                                                      )
  SET &SQ = &STR(')
  SET &LP = &STR((
  SET &RP = )

  /*===================================================================
  /* VERIFY THAT PDSMEM IS DELIMITED BY SINGLE QUOTATION MARKS
  /*===================================================================
  IF &SUBSTR(1:1,&PDSMEM) NE &SQ THEN +
     SET &PDSMEM = &STR(&SQ)&STR(&PDSMEM)
  IF &SUBSTR(&LENGTH(&PDSMEM):&LENGTH(&PDSMEM),&PDSMEM) NE &SQ THEN +
     SET &PDSMEM = &STR(&PDSMEM)&STR(&SQ)

  /*===================================================================
  /* VERIFY THAT PDSMEM HAS THE EXPECTED FORMAT OF "'PDSNAME(MEMBER)'"
  /*===================================================================
  SET &LPLOC = &SYSINDEX(&LP,&PDSMEM)
  SET &RPLOC = &SYSINDEX(&RP,&PDSMEM)
  IF &LPLOC = 0 OR &RPLOC = 0 THEN +
    DO
      WRITE *** ERROR: ARGUMENT FOR PARMETER 1, PDSMEM, NOT IN +
                       EXPECTED FORMAT OF "'PDSNAME(MEMBER)'"
      SET &MAXRC = 8
      GOTO LEAVE
    END

  /*===================================================================
  /* EXTRACT THE MEMBER NAME AND PDS NAME FROM PDSMEM AND PERFORM
  /* SANITY CHECKS
  /*===================================================================
  SET &PDSNAME = &SUBSTR(2:&LPLOC-1,&PDSMEM)
  SET &MEMNAME = &SUBSTR(&LPLOC+1:&RPLOC-1,&PDSMEM)

  CONTROL NOMSG
  SET &DSCHK = &SYSDSN(&PDSMEM)
  CONTROL MSG
  IF &DSCHK NE OK THEN +
    DO
      WRITE *** ERROR: &DSCHK
      SET &MAXRC = 8
      GOTO LEAVE
    END

  /*===================================================================
  /* DETERMINE THE BASIC TYPE OF PDSMEM
  /*===================================================================
  SET &SYSOUTTRAP = 40000
  LISTCAT ENTRIES(&PDSMEM) ALL
  SET &NUMLINES = &SYSOUTLINE

  IF &NUMLINES < 1 THEN +
    DO
      WRITE *** ERROR: NO OUTPUT FROM +
                       "LISTCAT ENTRIES(&PDSMEM) NONVSAM ALL" +
                       REQUEST
      SET &MAXRC = 8
      GOTO LEAVE
    END

  SET &CTR = 1
  SET &CURRLINE = &STR(&&SYSOUTLINE&CTR)
  /*===================================================================
  /* IF PDSMEM IS NOT FOUND, SAY SO AND QUIT
  /*===================================================================
  IF( &SYSINDEX(&STR(NOT FOUND+),&CURRLINE) > 0) THEN +
    DO
      WRITE *** ERROR: &PDSMEM DOES NOT EXIST
      SET &MAXRC = 8
      GOTO LEAVE
    END
  /*===================================================================
  /* IF PDSMEM DOES NOT SPECIFY A NONVSAM DATA SET OR AN ALIAS OF ONE,
  /* SAY SO AND QUIT
  /*===================================================================
  IF &SUBSTR(1:8,&STR(&CURRLINE&B)) NE &STR(NONVSAM ) AND +
     &SUBSTR(1:6,&STR(&CURRLINE&B)) NE &STR(ALIAS ) THEN +
    DO
      WRITE *** ERROR: &PDSMEM IS NEITHER A NONVSAM DATA SET +
                       NOR AN ALIAS OF ONE
      SET &MAXRC = 8
      GOTO LEAVE
    END

  /*===================================================================
  /* IF PDSMEM IS AN ALIAS THEN GET THE BASE NAME
  /*===================================================================
  ELSE IF &SUBSTR(1:6,&STR(&CURRLINE&B)) EQ &STR(ALIAS ) THEN +
    DO                                         /*+PDSMEM IS AN ALIAS */
      SET &CTR = &CTR + 1
      SET &CURRLINE = &STR(&&SYSOUTLINE&CTR)
      /*===============================================================
      /* SEARCH FOR A LINE THAT CONTAINS THE STRING "       NONVSAM--"
      /*===============================================================
      DO WHILE( &CTR <= &NUMLINES AND &SUBSTR(1:16,&STR(&CURRLINE&B)) +
                                      NE &STR(       NONVSAM--) +
              )
        SET &CTR = &CTR + 1
        SET &CURRLINE = &STR(&&SYSOUTLINE&CTR)
      END /* DO WHILE( &CTR <= &NUMLINES ) */

      /*===============================================================
      /* IF THE SEARCH WAS SUCCESSFUL, RESET PDSMEM TO THE BASE NAME,
      /* PRESERVING THE MEMBER NAME
      /*===============================================================
      IF &CTR LE &NUMLINES THEN +
        DO
          /*===========================================================
          /* EXTRACT THE BASE NAME OF THE ALIAS SPECIFIED BY PDSMEM
          /*===========================================================
          SET &PDSMEM_LEN = &LENGTH(&STR(&CURRLINE))
          SET &DSNAME = &SUBSTR(17:&PDSMEM_LEN,&CURRLINE)
          /*===========================================================
          /* FORM THE BASE NAME WITH THE MEMBER NAME
          /*===========================================================
          SET &PDSMEM = &SQ&DSNAME&LP&MEMNAME&RP&SQ
        END
      ELSE +
        DO
          WRITE *** ERROR: UNABLE TO LOCATE BASE NAME OF +
                           ALIAS &PDSMEM
          SET &MAXRC = 8
          GOTO LEAVE
        END
    END                                        /*-PDSMEM IS AN ALIAS */

  /*===================================================================
  /* DELETE THE MEMBER
  /*===================================================================
  CONTROL NOFLUSH
  FREE DDNAME(SDSNEXIT)

  ALLOCATE DDNAME(SDSNEXIT) DSNAME (&PDSMEM) SHR

  DELETE &PDSMEM FILE(SDSNEXIT)
  SET &ERRCODE = &LASTCC
  IF &ERRCODE = 0 THEN +
    WRITE *** MEMBER &MEMNAME WAS DELETED SUCCESSFULLY FROM &PDSNAME
  ELSE +
    WRITE *** ERROR: REQUEST TO DELETE MEMBER &MEMNAME FROM &PDSNAME +
                     FAILED WITH RETURN CODE &ERRCODE

  FREE DDNAME(SDSNEXIT)

LEAVE: RETURN CODE (&MAXRC)
\\
//*
//*********************************************************************
//* DSNTIAS: RUN THE GENERATED CLIST TO DELETE PDS MEMBERS.  THE
//*          FORMAT IS:
//*             %DSNTICDM PDSNAME(MEMNAME)
//*********************************************************************
//DSNTIAS EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSPROC  DD  DSN=&&TEMPPDS,DISP=(OLD,DELETE)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSOUT   DD  DSN=&&DSLIST,
//             DISP=(,PASS),
//             UNIT=SYSDA,SPACE=(TRK,5,RLSE)
//SYSTSIN  DD  *
  %DSNTICDM ${DSNEXIT}(${DSNZPARM})
