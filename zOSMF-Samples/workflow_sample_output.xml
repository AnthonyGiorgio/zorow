<?xml version="1.0" encoding="UTF-8"?>
<!--
/******************************************************************************/
/* Copyright Contributors to the zOS-Workflow Project.                        */
/* SPDX-License-Identifier: Apache-2.0                                        */
/******************************************************************************/
-->
 
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                          xsi:noNamespaceSchemaLocation="../workflow/schemas/workflow_v1.xsd">
 
<!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	 This sample demonstrates the use of load variables from JCL/REXX/Shell script execution.
	 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-->
 
<workflowInfo>
	<workflowID>outputSample</workflowID>
	<workflowDescription>Sample demonstrating output feature.</workflowDescription>
	<workflowVersion>1.0</workflowVersion>
	<vendor>IBM</vendor>
	<Configuration>
		<productID>ABC123</productID>
		<productName>Product ABC</productName>
		<productVersion>Version 1</productVersion>
 	</Configuration>
</workflowInfo>
 
<!-- Declare a set of variables for use below -->
<variable name="outputFileNameVariable">
	<label>File name for output file</label>
	<abstract>Enter a name for the output properties file</abstract>
	<description>This value is required. It is included in the JCL for output file path.</description>
	<category>Output File</category>
	<string>
		<default>testOutput</default>
	</string>
</variable>
 
<variable name="st_user">
	<label>user ID</label>
	<abstract>User ID for the started task.</abstract>
	<description>The user ID under whose authority the new started task will run.</description>
	<category>Started</category>
	<string>
		<validationType>USERID</validationType>
		<default>MYSTUSER</default>
	</string>
</variable>
 
<variable name="setting0" scope="global">
	<label>Global string variable</label>
	<abstract>A global scope string variable.</abstract>
	<description>This is a global scope string variable for output feature test.</description>
	<category>Global Variable</category>
	<string>
		<default>setting0</default>
	</string>
</variable>

<!-- This step is a demo to copy a z/OS UNIX file into an MVS data set. 
In this sample, dataset "ZOSMF.OUTPUT" is used in the output element. The user should create this dataset first or change the value of the output element to an existing data set.-->  
<step name="submitEmptyJCL">
	<title>Submit empty JCL</title>
	<description>Submit an empy JCL job using IEFBR14.</description>
	<variableValue name="st_user"/>
	<instructions substitution="true">This is a very simple JCL job submittion test setting0: ${global-setting0} using IEFBR14 and nothing will be done here.</instructions>
	<weight>1</weight>
	<skills>System Programmer</skills>
	<template> 
       		<inlineTemplate substitution="true">/* rexx */
address "TSO"
"oget '/usr/lpp/zosmf/samples/workflow_sample_automation_property.txt' '$_output'"</inlineTemplate>
       		<submitAs>TSO-REXX-JCL</submitAs>
		<output substitution="true" needResolveConflicts="true">ZOSMF.OUTPUT</output>
       	</template>
</step>
 
<!-- This step is a demo for the feature "load variables from a JCL/REXX/Shell script execution". -->
<step name="output">
	<title>A step with an output property file</title>
	<description>In this step, you execute a JCL job to generate an output property file.</description>
	<variableValue name="st_user" required="true"/>
	<variableValue name="setting0" required="true" scope="global"/>
	<variableValue name="outputFileNameVariable" required="true"/>
	<instructions>
		In this example step, some variable values are generated into a pre-specified output file and after perform, those variables will be loaded into workflows task after user resolves the variable conflicts if any.
       	</instructions>
	<weight>5</weight>
	<skills>System Programmer</skills>
	<template>
       		<inlineTemplate substitution="true"># shell script to generate some variables from workflows task to the output property file
echo st_user USER001 >> $_output
echo setting0 global001 >> $_output
       		</inlineTemplate>
       		<submitAs maxRc="0">shell-JCL</submitAs>
		<output substitution="true" needResolveConflicts="false">/u/tmp/${instance-outputFileNameVariable}</output>
       	</template>
</step>
 
</workflow>
